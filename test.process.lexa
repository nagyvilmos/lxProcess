# config for testing an lxProcess
# logFile - <name of log file; optional>
# test - list of tests to run, otherwise all tests are run.
# functions {
#   <global function defs for lxExression; optional>
# }
# processes {
#   <test name> {
#     functions {
#       <function defs for this test; block is optional>
#     }
#     process {
#       <process config for this test>
#     }
#     message {
#       <message to send for this test>
#     }
#     result {
#       <expected results> 
#     }
#   }
# }

logFile .\\log\\test.process.log
#test echo passThrough
test config
# ignore config for now
processes {
    echo {
        process {
			#loader - lexa.core.process.factory.InternalLoader
			class - Echo
		}
		logging {
			* {
				* ? true
#				DEBUG ? false
			}
		}
        message {
            service - echo
            message - echo
            request {
                testMessage - ### echo body ###
            }
		}
        result {
			testMessage - ### echo body ###
		}
    }
    passThrough {
		process {
			# loader - lexa.core.process.factory.InternalLoader
			class - PassThrough
			config {
				allowAnonymous ? false
				serviceList {
					pass - through
				}
			}
		}
		logging {
			* {
				* ? true
				DEBUG ? false
			}
		}
        message {
            service - through
            message - pass
            request {
                testMessage - ### pass through ###
            }
		}
        replies {
            1 {
                service - through
                message - pass
                source {
                    sourceRef % 1
                }
				request {
                    testMessage	- ### pass through ###
                }
				reply {
                    testMessage	- ### pass through ###
                }
				close ? true
			}
        }
        result {
			testMessage	- ### pass through ###
		}
	}
    config {
        # a config / exxpression based process
        # *** Incomplete, this does not work yet as no code behind ***
		process {
			# loader - lexa.core.process.factory.InternalLoader
			class - Config
            config {
                requestFields - ccy
                handleRequest "
                    ([data.contains data request.ccy]) ?
                    (
                        true
                    ) : (
                        return = [string.format "Unknown currency '%1$3s'" request.ccy];
                        false
                    )
                "
                #buildReply "
                #	reply.rate
                #"

                # calculation has datasets request and data:
                calculation "
                    ccy - request.ccy;
                    ccyData - [data.value data ccy];
                    rate - ccyData.rate
                "

                # a list of fields [NO dot] to send
                replyFields - ccy rate

                data {
                    GBP {
                        index % 0
                        rate $ 1.0
                    }
                    EUR {
                        index % 1
                        rate $ 1.25
                    }
                    USD {
                        index % 2
                        rate $ 1.50
                    }
                    HUF {
                        index % 40
                        rate $ 350.0
                    }
                }
            }
		}
		logging {
			* {
				* ? true
				DEBUG ? false
			}
		}
        message {
            service - echo
            message - echo
            request {
                testMessage - ### pass through ###
            }
		}
        replies {
            1 {
				service	echo
				message	echo
                source {
                    sourceRef % 1
                }
				request {
                    testMessage	### pass through ###
                }
				reply {
                    testMessage	### pass through ###
                }
				close ? true
			}
        }
        result {
			testMessage - ### pass through ###
		}
	}
}